<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="closeButton.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="closeButton.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="closeButton.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="earlabLinkLabel.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="earlabLinkLabel.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="earlabLinkLabel.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="aboutTextBox.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="aboutTextBox.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="aboutTextBox.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="pictureBox.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="pictureBox.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="pictureBox.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhyAFQAPcAAP///8wAANQSE9UmJ/OQkfGWl/WlpvSqq/Wxsva7vPfExelvcutyde2OkfKfofSv
        svOztfvg4fzj5PGmqvvd3/3p6v3r7P3t7vrS1frW2f3x8vvb3vze4fzn6f3u8P7y9P709v73+f/4+//9
        /////v/8+/7w7f/6+frV0P3p5v3u7P7x7//49/O0rfzh3vzl4v3q6P7t6/3s6v/29e59c/jHw/fIxPvb
        2P3e2/7y8f3y8f708+xqY+d0be54cu+AevKSjfSdl/SkoPWmovWqpfawq/ayrfe2svi6tvi/u/jJxvnL
        yPrOy/nQzfrSz/vW1PvY1vzf3f3r6vvp6NkRDNwYEt0bFd4eGdYeGd8gG94iHeEmId4mIeErJuEuKeEx
        LOMzLuU7NuVBPeBCPudJROlOSt9NSOZVUepbVepdWexiXOhgXOZiXepoY+1qZe5uaO5wa+pwa+50bu1x
        bupzbu52cep1cvB6du13dO18d+6Bfu6FgvCJhe+Kh+6PjO+Wk/KZlvOhnfCenO+fnfOlovSsqfOtq/ez
        sPOwrvW0sfa5t/a7ufW9u/jBv/nDwfnU0/rX1vra2fvd3Pvk488AAM4CAM0CAM0AAMsAAMcAANAFAdMI
        BM8REdkfHdMiItwpJdotKuAwLN40MeI4NNYzM+I6N+M+O+ZEQd9EQeNIReFGRNpERORMSuNRT+lVUuZa
        V91VVexhXuZdW+liX+plY+dlYulpZuZoZutsaeBmZudsaupube1zcepyce54dup3du16ee19fOR3d+x8
        fPGMiueIiO+PjfGSkvKWlPKamvGdm/KeneuZmfKiofGlpPWrq/ivrvWtre6qqvOurvW0tPa2tva/vvG7
        u/bAwPbDwvnGxvfKyfnOzvXMzPve3vjd3fzi4vzm5v3p6f3t7f3v7/zu7v7x8f3w8P7y8v3z8/719f72
        9v75+f/7+//8/P/9/f/+/vT09Ojo6N3d3dLS0sbGxru7u7CwsKSkpJmZmY6OjoKCgnd3d2xsbGBgYFVV
        VSwAAAAAyAFQAAAI/wABCBxIsKDBgwgTKlzIsKHDhxAjSpxIsaLFixgzatzIsaPHjyBDihxJsqTJkyhT
        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
        KJzCKrzCVREQADs=
</value>
  </data>
  <data name="$this.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.Language" type="System.Globalization.CultureInfo, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>(Default)</value>
  </data>
  <data name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.Localizable" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.GridSize" type="System.Drawing.Size, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>8, 8</value>
  </data>
  <data name="$this.Name">
    <value>EarLabDialog</value>
  </data>
  <data name="$this.DrawGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.TrayHeight" type="System.Int32, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>80</value>
  </data>
  <data name="$this.SnapToGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
</root>