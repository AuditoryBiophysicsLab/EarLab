//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.42.
// 
#pragma warning disable 1591

namespace ModuleUpdater.ModuleService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EarDev Module ServiceSoap", Namespace="http://eardev.bu.edu/webservices/EarLabService/Module")]
    public partial class EarDevModuleService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetModuleListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVersionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContactListOperationCompleted;
        
        private AuthHeader authHeaderValueField;
        
        private System.Threading.SendOrPostCallback AddModuleVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPreviousVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddVersionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EarDevModuleService() {
            this.Url = global::ModuleUpdater.Properties.Settings.Default.ModuleUpdater_ModuleService_EarDev_x0020_Module_x0020_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthHeader AuthHeaderValue {
            get {
                return this.authHeaderValueField;
            }
            set {
                this.authHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetModuleListCompletedEventHandler GetModuleListCompleted;
        
        /// <remarks/>
        public event GetVersionListCompletedEventHandler GetVersionListCompleted;
        
        /// <remarks/>
        public event GetVersionCompletedEventHandler GetVersionCompleted;
        
        /// <remarks/>
        public event GetContactListCompletedEventHandler GetContactListCompleted;
        
        /// <remarks/>
        public event AddModuleVersionCompletedEventHandler AddModuleVersionCompleted;
        
        /// <remarks/>
        public event UpdateVersionCompletedEventHandler UpdateVersionCompleted;
        
        /// <remarks/>
        public event GetPreviousVersionCompletedEventHandler GetPreviousVersionCompleted;
        
        /// <remarks/>
        public event AddVersionCompletedEventHandler AddVersionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eardev.bu.edu/webservices/EarLabService/Module/GetModuleList", RequestNamespace="http://eardev.bu.edu/webservices/EarLabService/Module", ResponseNamespace="http://eardev.bu.edu/webservices/EarLabService/Module", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetModuleList() {
            object[] results = this.Invoke("GetModuleList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetModuleList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetModuleList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetModuleList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetModuleListAsync() {
            this.GetModuleListAsync(null);
        }
        
        /// <remarks/>
        public void GetModuleListAsync(object userState) {
            if ((this.GetModuleListOperationCompleted == null)) {
                this.GetModuleListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModuleListOperationCompleted);
            }
            this.InvokeAsync("GetModuleList", new object[0], this.GetModuleListOperationCompleted, userState);
        }
        
        private void OnGetModuleListOperationCompleted(object arg) {
            if ((this.GetModuleListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModuleListCompleted(this, new GetModuleListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eardev.bu.edu/webservices/EarLabService/Module/GetVersionList", RequestNamespace="http://eardev.bu.edu/webservices/EarLabService/Module", ResponseNamespace="http://eardev.bu.edu/webservices/EarLabService/Module", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetVersionList(long moduleID) {
            object[] results = this.Invoke("GetVersionList", new object[] {
                        moduleID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetVersionList(long moduleID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetVersionList", new object[] {
                        moduleID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetVersionList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionListAsync(long moduleID) {
            this.GetVersionListAsync(moduleID, null);
        }
        
        /// <remarks/>
        public void GetVersionListAsync(long moduleID, object userState) {
            if ((this.GetVersionListOperationCompleted == null)) {
                this.GetVersionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionListOperationCompleted);
            }
            this.InvokeAsync("GetVersionList", new object[] {
                        moduleID}, this.GetVersionListOperationCompleted, userState);
        }
        
        private void OnGetVersionListOperationCompleted(object arg) {
            if ((this.GetVersionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionListCompleted(this, new GetVersionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eardev.bu.edu/webservices/EarLabService/Module/GetVersion", RequestNamespace="http://eardev.bu.edu/webservices/EarLabService/Module", ResponseNamespace="http://eardev.bu.edu/webservices/EarLabService/Module", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetVersion(long versionID) {
            object[] results = this.Invoke("GetVersion", new object[] {
                        versionID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetVersion(long versionID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetVersion", new object[] {
                        versionID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionAsync(long versionID) {
            this.GetVersionAsync(versionID, null);
        }
        
        /// <remarks/>
        public void GetVersionAsync(long versionID, object userState) {
            if ((this.GetVersionOperationCompleted == null)) {
                this.GetVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionOperationCompleted);
            }
            this.InvokeAsync("GetVersion", new object[] {
                        versionID}, this.GetVersionOperationCompleted, userState);
        }
        
        private void OnGetVersionOperationCompleted(object arg) {
            if ((this.GetVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eardev.bu.edu/webservices/EarLabService/Module/GetContactList", RequestNamespace="http://eardev.bu.edu/webservices/EarLabService/Module", ResponseNamespace="http://eardev.bu.edu/webservices/EarLabService/Module", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetContactList() {
            object[] results = this.Invoke("GetContactList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetContactList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetContactList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetContactList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetContactListAsync() {
            this.GetContactListAsync(null);
        }
        
        /// <remarks/>
        public void GetContactListAsync(object userState) {
            if ((this.GetContactListOperationCompleted == null)) {
                this.GetContactListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContactListOperationCompleted);
            }
            this.InvokeAsync("GetContactList", new object[0], this.GetContactListOperationCompleted, userState);
        }
        
        private void OnGetContactListOperationCompleted(object arg) {
            if ((this.GetContactListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContactListCompleted(this, new GetContactListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eardev.bu.edu/webservices/EarLabService/Module/AddModuleVersion", RequestNamespace="http://eardev.bu.edu/webservices/EarLabService/Module", ResponseNamespace="http://eardev.bu.edu/webservices/EarLabService/Module", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AddModuleVersion(string moduleName, string moduleDescription, string versionNumber, System.DateTime releaseDate, long contactID) {
            object[] results = this.Invoke("AddModuleVersion", new object[] {
                        moduleName,
                        moduleDescription,
                        versionNumber,
                        releaseDate,
                        contactID});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddModuleVersion(string moduleName, string moduleDescription, string versionNumber, System.DateTime releaseDate, long contactID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddModuleVersion", new object[] {
                        moduleName,
                        moduleDescription,
                        versionNumber,
                        releaseDate,
                        contactID}, callback, asyncState);
        }
        
        /// <remarks/>
        public long EndAddModuleVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddModuleVersionAsync(string moduleName, string moduleDescription, string versionNumber, System.DateTime releaseDate, long contactID) {
            this.AddModuleVersionAsync(moduleName, moduleDescription, versionNumber, releaseDate, contactID, null);
        }
        
        /// <remarks/>
        public void AddModuleVersionAsync(string moduleName, string moduleDescription, string versionNumber, System.DateTime releaseDate, long contactID, object userState) {
            if ((this.AddModuleVersionOperationCompleted == null)) {
                this.AddModuleVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddModuleVersionOperationCompleted);
            }
            this.InvokeAsync("AddModuleVersion", new object[] {
                        moduleName,
                        moduleDescription,
                        versionNumber,
                        releaseDate,
                        contactID}, this.AddModuleVersionOperationCompleted, userState);
        }
        
        private void OnAddModuleVersionOperationCompleted(object arg) {
            if ((this.AddModuleVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddModuleVersionCompleted(this, new AddModuleVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eardev.bu.edu/webservices/EarLabService/Module/UpdateVersion", RequestNamespace="http://eardev.bu.edu/webservices/EarLabService/Module", ResponseNamespace="http://eardev.bu.edu/webservices/EarLabService/Module", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateVersion(ref System.Data.DataSet versionDataSet) {
            object[] results = this.Invoke("UpdateVersion", new object[] {
                        versionDataSet});
            versionDataSet = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateVersion(System.Data.DataSet versionDataSet, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateVersion", new object[] {
                        versionDataSet}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateVersion(System.IAsyncResult asyncResult, out System.Data.DataSet versionDataSet) {
            object[] results = this.EndInvoke(asyncResult);
            versionDataSet = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateVersionAsync(System.Data.DataSet versionDataSet) {
            this.UpdateVersionAsync(versionDataSet, null);
        }
        
        /// <remarks/>
        public void UpdateVersionAsync(System.Data.DataSet versionDataSet, object userState) {
            if ((this.UpdateVersionOperationCompleted == null)) {
                this.UpdateVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateVersionOperationCompleted);
            }
            this.InvokeAsync("UpdateVersion", new object[] {
                        versionDataSet}, this.UpdateVersionOperationCompleted, userState);
        }
        
        private void OnUpdateVersionOperationCompleted(object arg) {
            if ((this.UpdateVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateVersionCompleted(this, new UpdateVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eardev.bu.edu/webservices/EarLabService/Module/GetPreviousVersion", RequestNamespace="http://eardev.bu.edu/webservices/EarLabService/Module", ResponseNamespace="http://eardev.bu.edu/webservices/EarLabService/Module", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPreviousVersion(long moduleID) {
            object[] results = this.Invoke("GetPreviousVersion", new object[] {
                        moduleID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPreviousVersion(long moduleID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPreviousVersion", new object[] {
                        moduleID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPreviousVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPreviousVersionAsync(long moduleID) {
            this.GetPreviousVersionAsync(moduleID, null);
        }
        
        /// <remarks/>
        public void GetPreviousVersionAsync(long moduleID, object userState) {
            if ((this.GetPreviousVersionOperationCompleted == null)) {
                this.GetPreviousVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPreviousVersionOperationCompleted);
            }
            this.InvokeAsync("GetPreviousVersion", new object[] {
                        moduleID}, this.GetPreviousVersionOperationCompleted, userState);
        }
        
        private void OnGetPreviousVersionOperationCompleted(object arg) {
            if ((this.GetPreviousVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPreviousVersionCompleted(this, new GetPreviousVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eardev.bu.edu/webservices/EarLabService/Module/AddVersion", RequestNamespace="http://eardev.bu.edu/webservices/EarLabService/Module", ResponseNamespace="http://eardev.bu.edu/webservices/EarLabService/Module", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AddVersion(long moduleID, string versionNumber, System.DateTime releaseDate, long contactID) {
            object[] results = this.Invoke("AddVersion", new object[] {
                        moduleID,
                        versionNumber,
                        releaseDate,
                        contactID});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddVersion(long moduleID, string versionNumber, System.DateTime releaseDate, long contactID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddVersion", new object[] {
                        moduleID,
                        versionNumber,
                        releaseDate,
                        contactID}, callback, asyncState);
        }
        
        /// <remarks/>
        public long EndAddVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddVersionAsync(long moduleID, string versionNumber, System.DateTime releaseDate, long contactID) {
            this.AddVersionAsync(moduleID, versionNumber, releaseDate, contactID, null);
        }
        
        /// <remarks/>
        public void AddVersionAsync(long moduleID, string versionNumber, System.DateTime releaseDate, long contactID, object userState) {
            if ((this.AddVersionOperationCompleted == null)) {
                this.AddVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddVersionOperationCompleted);
            }
            this.InvokeAsync("AddVersion", new object[] {
                        moduleID,
                        versionNumber,
                        releaseDate,
                        contactID}, this.AddVersionOperationCompleted, userState);
        }
        
        private void OnAddVersionOperationCompleted(object arg) {
            if ((this.AddVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddVersionCompleted(this, new AddVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://eardev.bu.edu/webservices/EarLabService/Module")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://eardev.bu.edu/webservices/EarLabService/Module", IsNullable=false)]
    public partial class AuthHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string userNameField;
        
        private string passWordField;
        
        /// <remarks/>
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string passWord {
            get {
                return this.passWordField;
            }
            set {
                this.passWordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetModuleListCompletedEventHandler(object sender, GetModuleListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModuleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModuleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetVersionListCompletedEventHandler(object sender, GetVersionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetVersionCompletedEventHandler(object sender, GetVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetContactListCompletedEventHandler(object sender, GetContactListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContactListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContactListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void AddModuleVersionCompletedEventHandler(object sender, AddModuleVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddModuleVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddModuleVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void UpdateVersionCompletedEventHandler(object sender, UpdateVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet versionDataSet {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPreviousVersionCompletedEventHandler(object sender, GetPreviousVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPreviousVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPreviousVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void AddVersionCompletedEventHandler(object sender, AddVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591